{"version":3,"sources":["components/Certificados.jsx","components/Introduction.jsx","components/Footer.jsx","components/Main.jsx","config/serviceWorker.js","index.js"],"names":["infoImgs","require","imgURLS","Carrousel","className","imageUrls","map","img","index","key","src","url","alt","title","Introduction","Footer","Main","Certificados","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uxGAIMA,G,MAAWC,EAAQ,KAuBzB,IAAMC,EAAU,CACd,wGACA,6FACA,4GACA,kGACA,4GACA,wGACA,+FACA,wGACA,qGACA,sGACA,8FACA,yFACA,oGACA,uGACA,oGACA,gGACA,4FACA,gGACA,4FACA,qGACA,+FACA,gGAGaC,EA9Cf,WACE,OACE,yBAAKC,UAAU,uBACb,wBAAIA,UAAU,eAAc,2DAE5B,kBAAC,UAAD,CAASC,UAAWH,GAClB,yBAAKE,UAAU,8CACZJ,EAASM,KAAI,SAACC,EAAKC,GAAN,OACZ,yBAAKJ,UAAU,YAAYK,IAAKD,GAC9B,kBAAC,iBAAD,CAAgBA,MAAOA,GACrB,yBAAKE,IAAKH,EAAII,IAAKC,IAAKL,EAAIM,MAAOT,UAAU,4BAE7C,uBAAGA,UAAU,2CAA2CG,EAAIM,e,MCa7DC,MA1Bf,WACE,OACE,oCACE,6BAASV,UAAU,sEACjB,yBACEM,IAPS,mFAQTE,IAAI,eACJR,UAAU,kDAEZ,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,oBAAd,gBACA,uBAAGA,UAAU,OAAb,0WAQA,qDChBKW,EANA,kBACX,4BAAQX,UAAU,cACd,uBAAGA,UAAU,kCAAb,4BCWOY,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,Q,MCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e7e7400c.chunk.js","sourcesContent":["import React from \"react\";\nimport { RViewer, RViewerTrigger } from \"react-viewerjs\";\nimport '../assets/styles/certificates.css';\n\nconst infoImgs = require(\"../assets/data/infoImgs.json\");\n\nfunction Carrousel() {\n  return (\n    <div className=\"container mt-5 mb-5\">\n      <h4 className=\"text-center\"><strong>Certificados obtenidos</strong></h4>\n\n      <RViewer imageUrls={imgURLS}>\n        <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3\">\n          {infoImgs.map((img, index) => (\n            <div className=\"card mb-4\" key={index}>\n              <RViewerTrigger index={index}>\n                <img src={img.url} alt={img.title} className=\"card-img-top c-pointer\"/>\n              </RViewerTrigger>\n                <p className=\"card-title text-center bg-light m-0 p-2\">{img.title}</p>\n            </div>\n          ))}\n        </div>\n      </RViewer>\n    </div>\n  );\n}\n\nconst imgURLS = [\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1600185911/diploma-escuela-javascript-1_pk8nql.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-prework-1_swwhng.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-fundamentos-javascript-1_ek0tm5.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-ecmascript-6-1_oghxab.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-javascript-profesional-1_lacryw.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-frontend-developer-1_osgc2b.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-react-ejs-1_oekevo.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-react-router-redux-1_pfvgix.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-asincronismo-js-1_s6strj.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-fundamentos-node-1_mbxrpr.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-passport-1_ohqkad.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964455/diploma-ssr-1_hn48y8.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-backend-nodejs-1_fhcmqw.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-basico-javascript-1_lualft.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-singlepage-app-1_l4nodc.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-html5-css3-1_lnv4ek.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-docker-1_ct7tfw.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964453/diploma-git-github-1_oujyjd.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-python-1_fnqtsy.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-lenguaje-c-2019-1_ygu23a.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599964454/diploma-python-cs-1_q3716j.jpg\",\n  \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1602651313/diploma-next-2020-1_xf83mp.png\"\n];\n\nexport default Carrousel;\n","import React from \"react\";\nimport '../assets/styles/introduction.css';\n\nconst urlProfile = \"https://res.cloudinary.com/duo6yoqmy/image/upload/v1599967553/profile_difxb3.jpg\";\n\nfunction Introduction() {\n  return (\n    <>\n      <article className=\"container position-relative bg-light rounded pl-3 pr-3 text-center\">\n        <img\n          src={urlProfile}\n          alt=\"photoProfile\"\n          className=\"rounded-circle position-absolute left top w-8\"\n        ></img>\n        <div className=\"mt-5 pt-5 pb-4\">\n          <h2 className=\"text-center mt-3\">Gary Barzola</h2>\n          <p className=\"p-4\">\n            Estudiante de Ingeniería en Ciencias Computacionales, con\n            conocimientos en varios frameworks y herramientas de desarrollo, me\n            gusta el trabajo colaborativo y la buena organización en la\n            asignación de tareas específicas, en la actualidad me gusta\n            aprovechar mi tiempo libre en extender mis conocimientos en areas\n            relacionadas con la tecnología.\n          </p>\n          <p>Ecuador, Guayaquil</p>\n        </div>\n      </article>\n    </>\n  );\n}\n\nexport default Introduction;","import React from 'react';\n\nconst Footer = () => (\n    <footer className=\"bg-primary\">\n        <p className=\"text-white m-0 p-2 text-center\">The best for the best!</p>\n    </footer>\n)\n\nexport default Footer;","import React from \"react\";\nimport Certificados from \"./Certificados.jsx\";\nimport Introduction from \"./Introduction.jsx\";\nimport Footer from \"./Footer.jsx\";\n\nfunction Main() {\n  return (\n    <>\n      <Introduction />\n      <Certificados />\n      <Footer />\n    </>\n  );\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main.jsx';\nimport './assets/styles/bootstrap.min.css';\nimport * as serviceWorker from './config/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}